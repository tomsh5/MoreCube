[{"C:\\Users\\tomsh\\Desktop\\Projects\\the-cube\\src\\index.js":"1","C:\\Users\\tomsh\\Desktop\\Projects\\the-cube\\src\\App.js":"2","C:\\Users\\tomsh\\Desktop\\Projects\\the-cube\\src\\reportWebVitals.js":"3","C:\\Users\\tomsh\\Desktop\\Projects\\the-cube\\src\\cmps\\CubeApp\\CubeApp.jsx":"4","C:\\Users\\tomsh\\Desktop\\Projects\\the-cube\\src\\cmps\\CubeEdit\\CubeEdit.jsx":"5","C:\\Users\\tomsh\\Desktop\\Projects\\the-cube\\src\\cmps\\Header\\Header.jsx":"6","C:\\Users\\tomsh\\Desktop\\Projects\\the-cube\\src\\services\\storageService.js":"7","C:\\Users\\tomsh\\Desktop\\Projects\\the-cube\\src\\cmps\\Modal\\Modal.jsx":"8","C:\\Users\\tomsh\\Desktop\\Projects\\the-cube\\src\\hooks\\useModal.js":"9","C:\\Users\\tomsh\\Desktop\\Projects\\the-cube\\src\\cmps\\Footer\\Footer.jsx":"10","C:\\Users\\tomsh\\Desktop\\Projects\\the-cube\\src\\i18n.js":"11"},{"size":577,"mtime":1610627980563,"results":"12","hashOfConfig":"13"},{"size":178,"mtime":1609858011211,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":6949,"mtime":1610637773180,"results":"16","hashOfConfig":"13"},{"size":1312,"mtime":1609160476657,"results":"17","hashOfConfig":"13"},{"size":794,"mtime":1610706512742,"results":"18","hashOfConfig":"13"},{"size":2248,"mtime":1609677732193,"results":"19","hashOfConfig":"13"},{"size":1645,"mtime":1610628184486,"results":"20","hashOfConfig":"13"},{"size":256,"mtime":1609685746479,"results":"21","hashOfConfig":"13"},{"size":484,"mtime":1610639074581,"results":"22","hashOfConfig":"13"},{"size":489,"mtime":1610380269381,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"fnh4d9",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\tomsh\\Desktop\\Projects\\the-cube\\src\\index.js",[],["53","54"],"C:\\Users\\tomsh\\Desktop\\Projects\\the-cube\\src\\App.js",[],"C:\\Users\\tomsh\\Desktop\\Projects\\the-cube\\src\\reportWebVitals.js",[],"C:\\Users\\tomsh\\Desktop\\Projects\\the-cube\\src\\cmps\\CubeApp\\CubeApp.jsx",["55"],"import React, { useState, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport './CubeApp.scss';\r\nimport storageService from '../../services/storageService'\r\nimport { Header } from '../Header/Header';\r\nimport { Footer } from '../Footer/Footer';\r\nimport { useSnackbar } from 'notistack';\r\n\r\n\r\nexport function CubeApp(props) {\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n  const [lng, setLng] = useState('en')\r\n  const [lngBtn, setLngBtn] = useState('HE')\r\n  const { t, i18n } = useTranslation('common');\r\n  const [cubeSide, setCubeSide] = useState('diagnol');\r\n  const [prevNum, setPrevNum] = useState(0)\r\n  const [hidden, setHidden] = useState('')\r\n  const [cube, setCube] = useState({\r\n    front: 'front', back: 'back', right: 'right',\r\n    left: 'left', top: 'top', bottom: 'bottom'\r\n  });\r\n  const [editBtn, seteEditBtn] = useState(<i className=\"far fa-eye\"></i>);\r\n\r\n  useEffect(() => {\r\n    const savedCube = storageService.load('cube')\r\n\r\n    if (savedCube) {\r\n      setCube(savedCube)\r\n    }\r\n  }, []);\r\n\r\n  function rollCube() {\r\n    let randomNum = getRandomInt(1, 7)\r\n\r\n    while (randomNum === prevNum) {\r\n      randomNum = getRandomInt(1, 7)\r\n    }\r\n    let randomSide = getRandomSide(randomNum)\r\n    setCubeSide('roll')\r\n\r\n    setTimeout(function () { setCubeSide(randomSide) }, 2000);\r\n    setPrevNum(randomNum)\r\n  }\r\n\r\n  function onEditCube() {\r\n    setHidden('hidden')\r\n    seteEditBtn(<i className=\"far fa-edit\"></i>)\r\n    if (hidden) {\r\n      setHidden('')\r\n      seteEditBtn(<i className=\"far fa-eye\"></i>)\r\n    }\r\n  }\r\n\r\n\r\n  function toggleCube(side) {\r\n    setCubeSide(side)\r\n  }\r\n\r\n  function getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    const num = Math.floor(Math.random() * (max - min) + min);\r\n    return num\r\n  }\r\n\r\n  function handleChange({ target }) {\r\n    const field = target.name\r\n    const value = target.type === 'number' ? +target.value : target.value\r\n    setCube({ ...cube, [field]: value })\r\n  }\r\n\r\n  function getRandomSide(num) {\r\n    switch (num) {\r\n      case 1:\r\n        return 'front';\r\n      case 2:\r\n        return 'back';\r\n      case 3:\r\n        return 'right';\r\n      case 4:\r\n        return 'left';\r\n      case 5:\r\n        return 'top';\r\n      case 6:\r\n        return 'bottom';\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  async function saveCube(cube) {\r\n    await storageService.post(`cube`, cube);\r\n    enqueueSnackbar(t(\"msg.save\"),{\r\n      anchorOrigin: {\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n      },\r\n      autoHideDuration: 2000,\r\n      variant: 'success',\r\n  });\r\n  }\r\nconst clearCube = () => {\r\n    setCube({\r\n      front: '', back: '', right: '',\r\n      left: '', top: '', bottom: ''\r\n    })\r\n    document.getElementById(\"edit-form\").reset();\r\n    enqueueSnackbar(t(\"msg.clear\"),{\r\n      anchorOrigin: {\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n      },\r\n      autoHideDuration: 2000,\r\n      variant: 'success',\r\n  });\r\n   \r\n  }\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  function changeLang(appLng) {\r\n      if (appLng === 'he'){\r\n        setLng('en')\r\n        i18n.changeLanguage('en')\r\n        setLngBtn('HE')\r\n      }\r\n      else {\r\n        setLng('he')\r\n        i18n.changeLanguage('he')\r\n        setLngBtn('EN')\r\n      }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header editBtn={editBtn} onEditCube={onEditCube} changeLang={changeLang} lng={lng} lngBtn={lngBtn}/>\r\n      <div className=\"container\">\r\n        <section className={`cube-app ${lng}`}>\r\n          <div className={`CubeEdit ${hidden}`}>\r\n            <form id=\"edit-form\" onSubmit={handleSubmit} >\r\n            <label>{t('sides.front')}</label>\r\n            <div className=\"cube-input\">\r\n              <input name=\"front\" type=\"text\" maxLength=\"36\" onChange={handleChange} placeholder={t('type.title')} />\r\n              <button className=\"preview-btn\" onClick={() => toggleCube('front')}>{t('preview.title')}</button>\r\n            </div>\r\n            <label>{t('sides.back')}</label>\r\n            <div className=\"cube-input\">\r\n              <input name=\"back\" type=\"text\" onChange={handleChange} placeholder={t('type.title')}/>\r\n              <button className=\"preview-btn\" onClick={() => toggleCube('back')}>{t('preview.title')}</button>\r\n            </div>\r\n            <label>{t('sides.right')}</label>\r\n            <div className=\"cube-input\">\r\n              <input name=\"right\" type=\"text\" onChange={handleChange} placeholder={t('type.title')} />\r\n              <button className=\"preview-btn\" onClick={() => toggleCube('right')}>{t('preview.title')}</button>\r\n            </div>\r\n            <label>{t('sides.left')}</label>\r\n            <div className=\"cube-input\">\r\n              <input name=\"left\" type=\"text\" onChange={handleChange} placeholder={t('type.title')} />\r\n              <button className=\"preview-btn\" onClick={() => toggleCube('left')}>{t('preview.title')}</button>\r\n            </div>\r\n            <label>{t('sides.top')}</label>\r\n            <div className=\"cube-input\">\r\n              <input name=\"top\" type=\"text\" onChange={handleChange} placeholder={t('type.title')}/>\r\n              <button className=\"preview-btn\" onClick={() => toggleCube('top')}>{t('preview.title')}</button>\r\n            </div>\r\n            <label>{t('sides.bottom')}</label>\r\n            <div className=\"cube-input\">\r\n              <input name=\"bottom\" type=\"text\" onChange={handleChange} placeholder={t('type.title')} />\r\n              <button className=\"preview-btn\" onClick={() => toggleCube('bottom')}>{t('preview.title')}</button>\r\n            </div>\r\n            <div className=\"save-clear-btns\">\r\n              <button className=\"clear-btn\" onClick={() => clearCube()}><i className=\"far fa-trash-alt\"></i></button>\r\n              <button className=\"save-btn\" onClick={() => saveCube(cube)}><i className=\"far fa-save\"></i></button>\r\n            </div>\r\n            </form>\r\n          </div>\r\n          <div className=\"roll-cube-btn\">\r\n            <button className=\"roll-btn\" onClick={() => rollCube()}>{t('roll.title')}</button>\r\n          </div>\r\n          <div className=\"cube-container\">\r\n            <div className=\"scene\">\r\n              <div className={`cube show-${cubeSide}`}>\r\n                <div className=\"cube__face cube__face--front\"><p>{cube.front}</p> </div>\r\n                <div className=\"cube__face cube__face--back\"><p>{cube.back}</p></div>\r\n                <div className=\"cube__face cube__face--right\"><p>{cube.right}</p></div>\r\n                <div className=\"cube__face cube__face--left\"><p>{cube.left}</p></div>\r\n                <div className=\"cube__face cube__face--top\"><p>{cube.top}</p></div>\r\n                <div className=\"cube__face cube__face--bottom\"><p>{cube.bottom}</p></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\tomsh\\Desktop\\Projects\\the-cube\\src\\cmps\\CubeEdit\\CubeEdit.jsx",["56"],"import React, { useState, useEffect } from 'react';\r\nimport '../CubeEdit/CubeEdit.scss'\r\n\r\nexport function CubeEdit(props) {\r\n\r\n    const [cube, setCube] = useState (props.cube);\r\n\r\n\r\n    function handleChange ({ target }){\r\n        const field = target.name\r\n        const value = target.type === 'number' ? +target.value : target.value\r\n        setCube( { [field]: value } )\r\n    }\r\n\r\n    return(\r\n        <div className=\"CubeEdit\">\r\n        <label>Front</label>\r\n        <input name=\"front\" value={cube.front} type=\"text\" onChange={handleChange} placeholder=\"Type...\"/>\r\n        <label>Back</label>\r\n        <input name=\"back\" value={cube.back} type=\"text\" onChange={handleChange} placeholder=\"Type...\"/>\r\n        <label>Right</label>\r\n        <input name=\"right\" value={cube.right} type=\"text\" onChange={handleChange} placeholder=\"Type...\"/>\r\n        <label>Left</label>\r\n        <input name=\"left\" value={cube.left} type=\"text\" onChange={handleChange} placeholder=\"Type...\"/>\r\n        <label>Bottom</label>\r\n        <input name=\"top\" value={cube.top} type=\"text\" onChange={handleChange} placeholder=\"Type...\"/>\r\n        <label>Top</label>\r\n        <input name=\"bottom\" value={cube.bottom} type=\"text\" onChange={handleChange} placeholder=\"Type...\"/>\r\n        <button>Save</button>\r\n        </div>\r\n    )\r\n\r\n}",["57","58"],"C:\\Users\\tomsh\\Desktop\\Projects\\the-cube\\src\\cmps\\Header\\Header.jsx",["59"],"C:\\Users\\tomsh\\Desktop\\Projects\\the-cube\\src\\services\\storageService.js",["60"],"export default {\n    query,\n    get,\n    post,\n    put,\n    remove,\n    postMany,\n    clearStorage,\n    load\n}\n\nfunction query(entityType) {\n    var entities = JSON.parse(localStorage.getItem(entityType)) || []\n    return Promise.resolve(entities);\n}\n\n\nfunction get(entityType, entityId) {\n    return query(entityType)\n        .then(entities => entities.find(entity => entity._id === entityId))\n}\n// function post(entityType, newEntity) {\n      \n//     // newEntity._id = _makeId() //// turned off because it changes the item id(roy)    \n//     return query(entityType)\n//         .then(entities => {\n//             entities.push(newEntity);\n//             _save(entityType, entities)\n//             return newEntity;\n//         })\n// }\nfunction post(entityType, newEntity) {   \n            _save(entityType, newEntity)\n}\n\nfunction load (key) {\n    var json = localStorage.getItem(key)\n    var value = JSON.parse(json)\n    return value;\n}\n\nfunction postMany(entityType, newEntities) {\n    return query(entityType)\n        .then(entities => {\n            entities.push(...newEntities);\n            _save(entityType, entities)\n            return entities;\n        })\n}\n\nfunction put(entityType, updatedEntity) {\n    return query(entityType)\n        .then(entities => {\n            const idx = entities.findIndex(entity => entity._id === updatedEntity._id);\n            entities.splice(idx, 1, updatedEntity)\n            _save(entityType, entities)\n            return updatedEntity;\n        })\n}\n\nfunction remove(entityType, entityId) {\n    return query(entityType)\n        .then(entities => {\n            const idx = entities.findIndex(entity => entity._id === entityId);\n         \n            entities.splice(idx, 1)\n            _save(entityType, entities)\n        })\n}\n\nfunction _save(entityType, entities) {\n    localStorage.setItem(entityType, JSON.stringify(entities))\n}\n\n\nfunction clearStorage(entity){\n    localStorage.removeItem(entity);\n\n}\n\n// function _makeId(length = 5) {\n//     var text = \"\";\n//     var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n//     for (var i = 0; i < length; i++) {\n//         text += possible.charAt(Math.floor(Math.random() * possible.length));\n//     }\n//     return text;\n// }","C:\\Users\\tomsh\\Desktop\\Projects\\the-cube\\src\\cmps\\Modal\\Modal.jsx",[],"C:\\Users\\tomsh\\Desktop\\Projects\\the-cube\\src\\hooks\\useModal.js",[],["61","62"],"C:\\Users\\tomsh\\Desktop\\Projects\\the-cube\\src\\cmps\\Footer\\Footer.jsx",["63","64"],"import React, { useState, useEffect } from 'react';\r\nimport './Footer.scss';\r\n\r\n\r\nexport function Footer() {\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <footer className=\"flex justify-center\">\r\n\r\n\r\n           <span>© All rights reserved 2021</span> \r\n           <span>ux/ui: <a href=\"https://www.linkedin.com/in/mor-gavni-496234198\">Mor Gavni</a></span>\r\n           <span>developer: <a href=\"https://www.linkedin.com/in/tom-shalem\">Tom shalem</a> </span>\r\n\r\n\r\n        </footer>\r\n    )\r\n\r\n}","C:\\Users\\tomsh\\Desktop\\Projects\\the-cube\\src\\i18n.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":11,"column":28,"nodeType":"71","messageId":"72","endLine":11,"endColumn":41},{"ruleId":"69","severity":1,"message":"73","line":1,"column":27,"nodeType":"71","messageId":"72","endLine":1,"endColumn":36},{"ruleId":"65","replacedBy":"74"},{"ruleId":"67","replacedBy":"75"},{"ruleId":"69","severity":1,"message":"76","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":25},{"ruleId":"77","severity":1,"message":"78","line":1,"column":1,"nodeType":"79","endLine":10,"endColumn":2},{"ruleId":"65","replacedBy":"80"},{"ruleId":"67","replacedBy":"81"},{"ruleId":"69","severity":1,"message":"76","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":25},{"ruleId":"69","severity":1,"message":"73","line":1,"column":27,"nodeType":"71","messageId":"72","endLine":1,"endColumn":36},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'closeSnackbar' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.",["82"],["83"],"'useState' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["82"],["83"],"no-global-assign","no-unsafe-negation"]